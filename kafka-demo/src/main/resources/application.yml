#server.port=8080
##制定kafka代理地址
#spring.kafka.bootstrap-servers=localhost:9092
##消息发送失败重试次数
#spring.kafka.producer.retries=0
##每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
##每次批量发送消息的缓冲区大小
#spring.kafka.producer.buffer-memory=335554432
## 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=test:sprringcloudlearn.kafkademo.model.Message
##=============== consumer  =======================
## 指定默认消费者group id
#spring.kafka.consumer.group-id=user-log-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
## 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


spring:
  kafka:
    consumer:
      group-id: foo
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: essmage:sprringcloudlearn.kafkademo.model.Message
server:
  port: 8080
